# Timer 인터럽트-1
# this makes program sleep in intervals
# from time import time, sleep
import time
while True:
    time.sleep(3 - time.time() % 1) # run every 1 second... you can change that
    print (int(time.time()))
    #break
	# thing to run
  
  # Time 인터럽트-2
from threading import Timer

def doSomething() :
    print(int(time.time()))

t = Timer(interval=5.0, function=doSomething)

t.start()

# 파일 데이터 불러오기
import pandas as pd
file ='pv_11.csv'
df = pd.read_csv(file, encoding='euckr')
df

#---------------------------  특정 Cell 값 Accessing
start = time.time()
for i in range(1, 10000):

#     v = df[i]['V01'] #잘못된 방법
#     v = df[i, 'V01'] #잘못된 방법         
#     v = df.loc[i]['V01']  # 소요시간 =  0.10974526405334473     
#     v = df.loc[i, 'V01']  # 소요시간 =  0.010970830917358398          
#     v = df.iloc[0]['V01'] # 소요시간 =  0.09477424621582031    

  v = df.at[i, 'V01'] # 소요시간 =  0.003989219665527344

end = time.time()

print ('# 소요시간 = ', end - start)

#5초에 한번씩 데이터 수집하기
import time
file = 'new.csv'
i = 0
while True:                     #--------------------- 한 Line씩 new.csv에 저장하기(Append)
    _line = row2String(df.loc[i])
    # print(_line)
    appendLine(file, _line)
    i += 1
    time.sleep(3) # run every 1 second... you can change that
    
    # ----------------------------------- 한 Row 데이터를 문자열로 변환
def row2String(row) :
    _str = ""
    for val in row:
        if _str != "" :
            _str += ","
        _str = _str + str(val)
    return _str
    
    #변환된 데이터를 확인
data = df.loc[1]
data_str = row2String(data)
data_str

#----------------------------------- 파일에 한줄 추가하기
def appendLine(file, data) :
    f = open(file, "a")       #************************  
    f.write(data+'\n')        #************************  
    f.close()
    
    #새로운 파일에 데이터 저장하기
file = 'new.csv'
data_str = row2String(df.loc[2])
appendLine(file, data_str)
#######################################################################################
#위에 것들을 총 집합! 
import time
import pandas as pd

# ----------------------------------- 한 Row 데이터를 문자열로 변환
def row2String(row) :
    _str = ""
    for val in row:
        if _str != "" :
            _str += ","
        _str = _str + str(val)
    return _str

#----------------------------------- 파일에 한줄 추가하기
def appendLine(file, data) :
    f = open(file, "a")       #************************  
    f.write(data+'\n')        #************************  
    f.close()   
    
    
#------------------------------------- Sensor Data Reading......
file ='pv_11.csv'
df = pd.read_csv(file, encoding='euckr')

new_file = 'new.csv'

#------------------------------------- Main Loop
i = 0
while True:
    _line = row2String(df.loc[i]) #Sensor 데이터 Read
    print(_line)
    try :
        appendLine(new_file, _line) #서버 전송
    except:
        print("파일 Writing 오류", 'error')
    else :
        i += 1
    finally :
        time.sleep(3) # run every 1 second... you can change that
